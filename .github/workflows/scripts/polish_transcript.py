#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Cleans and normalizes the transcript HTML generated by gen_vtt.py or other sources.
- Removes inline timestamps like [00:12], 00:12:, (00:12) etc.
- Deduplicates repeated "Speaker:" prefixes
- Ensures speaker span + ": " + text format
- Fixes emoji VTT absolute-domain: media.chbmp.org -> chbmp.org
Inputs:
  ARTDIR, BASE
  IN_HTML (optional) path to override input
Outputs:
  ARTDIR/BASE_transcript.clean.html
"""
from __future__ import annotations
import os, sys, re
from utils import log, ensure_dir

ARTDIR = os.environ.get("ARTDIR",".")
BASE   = os.environ.get("BASE","space")
LOG_PATH = os.path.join(ARTDIR, f"{BASE}_polish.log")

IN_HTML  = os.environ.get("IN_HTML","") or os.path.join(ARTDIR, f"{BASE}_transcript.html")
OUT_HTML = os.path.join(ARTDIR, f"{BASE}_transcript.clean.html")

TS_RE = re.compile(r'[\(\[]?\b\d{1,2}:\d{2}(?::\d{2})?\b[\)\]]?:?\s*')
DUP_SPK_RE = re.compile(r'^(<span class="speaker">([^<]+)</span>:\s*)(\s*\2:)+', re.I)

def polish(html: str) -> str:
    # Drop timestamps
    html = TS_RE.sub("", html)

    # Deduplicate "Speaker:" repeats inside each line block
    def _dedupe(m):
        return m.group(1)
    html = DUP_SPK_RE.sub(_dedupe, html)

    # Domain fix for emoji VTT references in any data attributes (belt & suspenders)
    html = html.replace("media.chbmp.org", "chbmp.org")

    # Strip accidental doubled <br>
    html = re.sub(r'(?:<br>\s*){3,}', '<br><br>', html)
    return html

def main():
    try:
        if not os.path.isfile(IN_HTML):
            log(f"Input transcript not found: {IN_HTML}; nothing to polish.", LOG_PATH)
            with open(OUT_HTML, "w", encoding="utf-8") as fh: fh.write("")
            return 0
        with open(IN_HTML, "r", encoding="utf-8") as fh:
            raw = fh.read()
        out = polish(raw)
        with open(OUT_HTML, "w", encoding="utf-8") as fh:
            fh.write(out)
        log(f"Wrote {OUT_HTML}", LOG_PATH)
        return 0
    except Exception as e:
        log(f"ERROR: {e}", LOG_PATH)
        return 1

if __name__ == "__main__":
    sys.exit(main())
